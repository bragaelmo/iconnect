<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>{{title}}</title>
    <!-- Favicon-->
    <link rel="icon" href="/images/icone.png">
    <!-- project css file  -->
    <link rel="stylesheet" href="/css/estilo.css">
    <link rel="stylesheet" href="/css/emojionearea.css">

    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  </head>

  {{#if_cond login '!=' ''}}
  <body onload="getMessages()">
  {{else}}
  <body style="background-color: #075E54;">
  {{/if_cond}}

    {{#if_cond container '==' false}}
    <div>
    {{else}}
    <div class="container">
    {{/if_cond}}


      {{{body}}}


    </div>
  <!-- Jquery Core Js -->
  <script src="/js/libscripts.bundle.js"></script>
    <script src="https://cdn.socket.io/4.5.0/socket.io.min.js" integrity="sha384-7EyYLQZgWBi67fBtVxw60/OWl1kjsfrPFcaU0pp0nAh+i8FD068QogUvg85Ewy1k" crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://cdn.jsdelivr.net/npm/emojionearea@3.4.2/dist/emojionearea.min.js"></script>
<script>
          //Checar se a zenvia envia emoji
           // $('#textarea').emojioneArea({
           //     pickerPosition: "top"
           // });//
    var server = "https://localhost:3000";
    var socket = io.connect(server);

    //render all messages that received
    socket.on("receivedMessage", (data) => {
        const phoneChat = document.getElementById("chat-client-phone").innerText
        const chatOpen = document.getElementById("chat-client-name").innerText
        var renderChatAutomatic = false
        if(phoneChat == data.from){
          renderChatAutomatic = true
        }

        if(chatOpen != ''){
          changeStatus(data.from, '', renderChatAutomatic)
        }

        if($('#em-espera-style').hasClass('active')){
          startListClients()
        } else if ($('#em-atendimento-style').hasClass('active')) {
          startListClientsEmAtendimento()
        }

        //Parte para adiconar no sininho se tem notificação
        var not = parseInt(document.getElementById('noti').innerText);
        not = not + 1;
        document.getElementById('noti').innerHTML = not;
        document.getElementById('noti2').innerHTML = not;
    })

    function renderMessageInChat(obj){
        const chatBody = document.getElementById('chatBody');

        const dateTime = obj.timeMsg.split('T')
        const date = dateTime[0].split('-')
        const dateFinish = `${date[2]}-${date[1]}-${date[0]}`
        const time = dateTime[1].split('.')[0].split(':')
        // Ordem exemplo: 26-09-2022 10:40
        const timeFinish = ` ${dateFinish} ${time[0]}:${time[1]}`
        obj.timeMsg = timeFinish


        if(obj.isClient){
          chatClient(obj)
        }
      }

      var query = location.search.slice(1);
      var partes = query.split('&');
      var data = {};
      partes.forEach(function (parte) {
          var chaveValor = parte.split('=');
          var chave = chaveValor[0];
          var valor = chaveValor[1];
          data[chave] = valor;
      });

    function chatClient(obj){
       chatBody.insertAdjacentHTML("beforeend",`
                <li class="mb-3 d-flex flex-row align-items-end" id="messageOpen">
                    <div class="max-width-70">
                        <div class="user-info mb-1">
                            <span class="text-muted small">
                              <br> ${obj.name}:
                            </span>
                        </div>
                        <div class="card border-0 p-3">
                            <div class="message"><p>${obj.body}</p> <p class="dateHourChat"> ${obj.timeMsg} </p></div>
                        </div>
                    </div>
                </li>`
            )
    }

    function chatAtendente(obj){
       chatBody.insertAdjacentHTML("beforeend",`
          <li class="mb-3 d-flex flex-row justify-content-end" id="messageOpen">
              <div class="max-width-70">
                  <div class="user-info mb-1">
                      <span class="text-muted small">
                      <br>Robo Zenvia:</span>
                  </div>
                  <div class="card border-0 p-3">
                      <div class="message"><p>${obj.body}</p> <p class="dateHourChat"> ${obj.timeMsg} </p></div>
                  </div>
              </div>
        </li>`)
    }
            //headerClient chatBody chatFooter

    disableComponents()
    function disableComponents(){
      document.getElementById("headerClient").style.display = "none";
      document.getElementById("headerClientEmpty").style.display = "block";
      document.getElementById("chatBody").style.display = "none";
      document.getElementById("chatBodyEmpty").style.display = "block";
      document.getElementById("buttonMoverAtendimento").style.display = "none";
      document.getElementById("chatFooter").style.display = "none";
      document.getElementById("chatFooterEmpty").style.display = "block";
      document.getElementById("chat-client-name").innerText = ''
    }

    startListClients()
    function startListClients(){
      $('.msg').fadeOut(600, function(){ $(this).remove();});
      fetch('https://localhost:3000/wpp/last-message-client')
        .then(res => res.json())
        .then(data => {
            for(clients of data){

            const client = {
                clientNumber: clients["from_wa_id"],
                clientName: clients["name"],
                timeMsg: clients["created_at"],
                clientMsg: clients["body"],
            }

            renderInMessageVisualizer(client);
        }
        })
        .catch(e => console.log(e));
    }

    function renderInMessageVisualizer(obj){
      const dateTime = obj.timeMsg.split('T')
      const date = dateTime[0].split('-')
      const dateFinish = `${date[2]}-${date[1]}-${date[0]}`
      const time = dateTime[1].split('.')[0].split(':')
      // Ordem exemplo: 26-09-2022 10:40
      const timeFinish = ` ${dateFinish} ${time[0]}:${time[1]}`
      obj.timeMsg = timeFinish

        $('#contact_area').prepend(
            `<div class="msg")">
                <li class="list-group-item px-md-4 py-3 py-md-4 n${obj.clientNumber}">
                    <a onclick="changeStatus(${obj.clientNumber})" class="d-flex">
                        <img class="avatar lg rounded-circle img-thumbnail" style="border: 1px solid silver; text-align: center;" src="https://ui-avatars.com/api/?name=${obj.clientName}&background=random&color=ff0000&bold=true">
                        <div class="flex-fill ms-3 text-truncate">
                            <h6 class="d-flex justify-content-between mb-0"><span><b>${obj.clientName}</b></span> <small class="msg-time"><b>${obj.timeMsg}</b></small></h6>
                            <span class="text-muted"> <i class="icofont-swoosh-right   fs-5"></i></span>
                            ${obj.clientMsg}
                        </div>
                    </a>
                </li>
            </div>`
        )
    }

    //startListClientsEmAtendimento()
    function startListClientsEmAtendimento(){
      $('.msg').fadeOut(600, function(){ $(this).remove();});
      fetch('https://localhost:3000/wpp/last-message-client-all')
      .then(res => res.json())
      .then(data => {
        for(clients of data){

          const client = {
              clientNumber: clients["from_wa_id"],
              clientName: clients["name"],
              timeMsg: clients["created_at"],
              clientMsg: clients["body"],
          }
          renderInMessageVisualizerEmAtendimento(client);
        }
      })
      .catch(e => console.log(e));
    }

    onclickCloseChatBody()
    function onclickCloseChatBody(){
      document.getElementById("em-atendimento-style").setAttribute('onclick', `closeChatBodyEspera()`)
      document.getElementById("em-espera-style").setAttribute('onclick', `closeChatBodyAtendimento()`)
    }
    function closeChatBodyEspera(){
      document.getElementById('chatBody').innerHTML = ''
      disableComponents()
      startListClientsEmAtendimento()
    }
    function closeChatBodyAtendimento(){
      document.getElementById('chatBody').innerHTML = ''
      disableComponents()
      startListClients()
    }

    function renderInMessageVisualizerEmAtendimento(obj){
      const dateTime = obj.timeMsg.split('T')
      const date = dateTime[0].split('-')
      const dateFinish = `${date[2]}-${date[1]}-${date[0]}`
      const time = dateTime[1].split('.')[0].split(':')
      // Exemplo timefinish: 26-09-2022 10:40
      const timeFinish = ` ${dateFinish} ${time[0]}:${time[1]}`
      obj.timeMsg = timeFinish

      $('#contact_area_atendimento').prepend(
          `<div class="msg")">
              <li class="list-group-item px-md-4 py-3 py-md-4 n${obj.clientNumber}">
                  <a onclick="changeStatus(${obj.clientNumber})" class="d-flex">
                      <img class="avatar lg rounded-circle img-thumbnail" style="border: 1px solid silver; text-align: center;" src="https://ui-avatars.com/api/?name=${obj.clientName}&background=random&color=ff0000&bold=true">
                      <div class="flex-fill ms-3 text-truncate">
                          <h6 class="d-flex justify-content-between mb-0"><span>${obj.clientName}</span> <small class="msg-time">${obj.timeMsg}</small></h6>
                          <span class="text-muted"> <i class="icofont-swoosh-right   fs-5"></i></span>
                          ${obj.clientMsg}
                      </div>
                  </a>
              </li>
          </div>`
      )
    }

    function renderMessagesInChat(arr,clientNumber){
      //render info in chat
      document.getElementById("chat-client-phone").innerText = clientNumber;



      var nameClient = ''
      var statusClient = ''

      for(item of arr){
        var timeMsg = item.created_at;

        const dateTime = timeMsg.split('T')
        const date = dateTime[0].split('-')
        const dateFinish = `${date[2]}-${date[1]}-${date[0]}`
        const time = dateTime[1].split('.')[0].split(':')
        // Ordem exemplo: 26-09-2022 10:40
        const timeFinish = `${dateFinish} ${time[0]}:${time[1]}`

        item.timeMsg = timeFinish
        if(item.perfil == 'CLIENTE'){
          nameClient = item.name
          chatClient(item)
          statusClient = item.status
        }

        if(item.perfil == 'ATENDENTE'){
          chatAtendente(item)
        }
      }

      if (statusClient == 'EM_ATENDIMENTO'){
         document.getElementById("buttonMoverAtendimento").style.display = 'none'
      } else {
        document.getElementById("buttonMoverAtendimento").style.display = "block";
        document.getElementById("buttonMoverAtendimento").setAttribute('onclick', `modalMoverAtendimento(${clientNumber})`)
      }
      document.getElementById("chat-client-name").innerText = nameClient;
      document.getElementById("chat-client-photo").src = `https://ui-avatars.com/api/?name=${nameClient}&background=random&color=ff0000&bold=true`;
      document.getElementById("chat-client-type").innerText = statusClient
      // Scroll to message more recent
      chatBody.scrollTop = chatBody.scrollHeight;
    }

     function renderMessagesInChatT(arr,clientNumber){
      //take name
      fetch('https://localhost:3000/wpp/client-data',{
        method: 'POST',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({clientNumber: clientNumber}),
      }).then((res) => res.json())
        .then((data) => {

        const name = data[0].name

        //render info in chat
        document.getElementById("chat-client-name").innerText = name;
        document.getElementById("chat-client-phone").innerText = clientNumber;
        document.getElementById("chat-client-photo").src = `https://ui-avatars.com/api/?name=${name}&background=random&color=ff0000&bold=true`;

        const chatBody = document.getElementById('chatBody');
        chatBody.innerHTML = '' // delete message in

        for(item of arr){
          var timeMsg = item.created_at;

          if(timeMsg.indexOf('Z') != -1){
              const date = new Date(timeMsg.replace('Z',''));

              const hour = String(date.getHours()).padStart(2,'0');
              const minute = String(date.getMinutes()).padStart(2,'0');

              timeMsg = hour + ':' + minute;
          }

          if(arr.to_wa == undefined){
             chatBody.insertAdjacentHTML("beforeend",`
               <li class="mb-3 d-flex flex-row align-items-end">
                          <div class="max-width-70">
                              <div class="user-info mb-1">
                                  <span class="text-muted small">
                                  ${timeMsg},<br>${name}:</span>
                              </div>
                              <div class="card border-0 p-3">
                                  <div class="message"> ${item["body"]}</div>
                              </div>
                          </div>
                      </li>`)
          }

        }
      }).catch((res) => console.log(res));
    }


    function updateStatusAtendimento(clientNumber){
      fetch('https://localhost:3000/wpp/updatestatus', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({from_wa_id: clientNumber}),
      })
      $('#modalCloseMessage').modal('toggle')

      disableComponents()
      location.reload()
    }

    function modalMoverAtendimento(clientNumber){
        let messageOpen = document.getElementById("chatBody").style.display
        if (messageOpen === 'block'){
            $('#modalCloseMessage').modal('show')
            const clientName = document.getElementById("chat-client-name").innerText
            $('#spanInBodyModalCloseMessage').text("Mover o atendimento de "+clientName+" ("+clientNumber+") para a fila de " )
            document.getElementById("buttonMover").setAttribute('onclick', `updateStatusAtendimento(${clientNumber})`)
        }
    }

    function enableComponents(){
      document.getElementById("headerClient").style.display = "block";
      document.getElementById("headerClientEmpty").style.display = "none";
      document.getElementById("chatBody").style.display = "block";
      document.getElementById("chatBodyEmpty").style.display = "none";
      document.getElementById("chatFooter").style.display = "block";
      document.getElementById("chatFooterEmpty").style.display = "none";
    }

    function changeStatus(clientNumber, type, renderAutomatic = true){
            //render msg of DB
      if (typeof clientNumber !== 'undefined') {
          const phoneChatIsOpen = document.getElementById("chat-client-phone").innerText


          //RENDER MESSAGES IN CHAT
          fetch('https://localhost:3000/wpp/message-chat-client', {
            method: 'POST',
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({wa_id: clientNumber}),
          }).then(res => res.json())
            .then(data => {
              //render msg chat
                if(renderAutomatic){
                  renderMessagesInChat(data, clientNumber);
                  enableComponents()
                }
            })
            .catch(err => {
            console.log(err)
          })

      } else {
        disableComponents()
      }

    }

        </script>
        <script>
          function msgErroLogin(){
            Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Email ou senha incorreto!'
            })
          }
           function cadastromsg(){
           Swal.fire({
              title:'Sucesso!',
              text:'Cadastro realizado com sucesso!',
              icon:'success'
           })
          }

         /* if({{message}}){
            msgErroLogin();

          }     */
        </script>
        <!-- Jquery Core Js -->
        <script src="/bundles/libscripts.bundle.js"></script>
        <!-- Plugin Js-->
        <!-- <script src="/bundles/apexcharts.bundle.js"></script>
        <!-- Jquery Page Js -->
        <!-- tawk chat -->
        <script src="/js/template.js"></script>
        <script src="/js/page/hr.js"></script>

  </body>
</html>
