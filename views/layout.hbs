<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>{{title}}</title>
    <!-- Favicon-->
    <link rel="icon" href="/images/icone.png">
    <!-- project css file  -->
    <link rel="stylesheet" href="/css/estilo.css">
    <link rel="stylesheet" href="/css/emojionearea.css">

    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  </head>

  {{#if_cond login '!=' ''}}
  <body onload="getMessages()">
  {{else}}
  <body style="background-color: #075E54;">
  {{/if_cond}}

    {{#if_cond container '==' false}}
    <div>
    {{else}}
    <div class="container">
    {{/if_cond}}


      {{{body}}}


    </div>
  <!-- Jquery Core Js -->
  <script src="/js/libscripts.bundle.js"></script>
    <script src="https://cdn.socket.io/4.5.0/socket.io.min.js" integrity="sha384-7EyYLQZgWBi67fBtVxw60/OWl1kjsfrPFcaU0pp0nAh+i8FD068QogUvg85Ewy1k" crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://cdn.jsdelivr.net/npm/emojionearea@3.4.2/dist/emojionearea.min.js"></script>
<script>
          //Checar se a zenvia envia emoji
           // $('#textarea').emojioneArea({
           //     pickerPosition: "top"
           // });//
    var server = "https://localhost:3000";
    var socket = io.connect(server);

    //render all messages that received
    socket.on("receivedMessage", (data) => {
        const date = new Date()
        const clientName = data.message.visitor.name;
        const timeMsg = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2,'0')}`
        const clientNumber = data.message.from;
        const clientMsg = data.message.contents[0].text;

        /**/
        //startListClients()
        renderInMessageVisualizer({clientNumber, clientName, timeMsg, clientMsg});

        //exist same contact in display messager? if exist delete
        var queryNumbers = document.querySelectorAll(`.n${clientNumber}`);

        console.log(queryNumbers);
        console.log('--------');

        if(queryNumbers.length >= 1){
            queryNumbers[1].remove();
        }

        //render mensagem in chat if exist
        var query = location.search.slice(1);
        var numberChat = query.split('=')[1];
        console.log('numberChat ' + numberChat)
        console.log('clientNumber ' + clientNumber)

        if(clientNumber == numberChat){
            renderMessageInChat({clientName, timeMsg, clientMsg, isClient: true})
        }

        //Adicionar notificação
        $('#notification').prepend(
          `<li class="py-2 mb-1 border-bottom t${clientNumber}">
            <a href="?wa_id=${clientNumber}" class="d-flex">
            <img class="avatar lg rounded-circle img-thumbnail" style="border: 1px solid silver; text-align: center;" src="https://ui-avatars.com/api/?name=${clientName}&background=random&color=ff0000&bold=true">
                <div class="flex-fill ms-2">
                     <p class="d-flex justify-content-between mb-0 "><span class="font-weight-bold">${clientName}</span>timeMsgnpm<small></small></p>
                    <span class="">${clientMsg}</span>
                </div>
            </a>
          </li>`
        )


        //Parte para adiconar no sininho se tem notificação
        var not = parseInt(document.getElementById('noti').innerText);
        not = not + 1;
        document.getElementById('noti').innerHTML = not;
        document.getElementById('noti2').innerHTML = not;
    })

    function renderMessageInChat(obj){
        const chatBody = document.getElementById('chatBody');
        console.log('TESTANDO AQUI ' + JSON.stringify(obj))

        if(obj.timeMsg.indexOf('Z') != -1){
             const date = new Date(obj.timeMsg.replace('Z',''));

             const month = String(date.getMonth());
             const hour = String(date.getHours()).padStart(2,'0');
             const minute = String(date.getMinutes()).padStart(2,'0');

             obj.timeMsg = month + ',' + hour + ':' + minute;
        }

        if(obj.isClient){
            // getMessages()
            chatBody.insertAdjacentHTML("beforeend",`
                <li class="mb-3 d-flex flex-row align-items-end" id="messageOpen">
                    <div class="max-width-70">
                        <div class="user-info mb-1">
                            <span class="text-muted small">
                               ${obj.timeMsg},<br> ${obj.clientName}:
                            </span>
                        </div>
                        <div class="card border-0 p-3">
                            <div class="message"> ${obj.clientMsg}</div>
                        </div>
                    </div>
                </li>`
            )
        }
      }

      var query = location.search.slice(1);
      var partes = query.split('&');
      var data = {};
      partes.forEach(function (parte) {
          var chaveValor = parte.split('=');
          var chave = chaveValor[0];
          var valor = chaveValor[1];
          data[chave] = valor;
      });


            //headerClient chatBody chatFooter

    disableComponents()
    function disableComponents(){
      document.getElementById("headerClient").style.display = "none";
      document.getElementById("headerClientEmpty").style.display = "block";
      document.getElementById("chatBody").style.display = "none";
      document.getElementById("chatBodyEmpty").style.display = "block";
      document.getElementById("buttonMoverAtendimento").style.display = "none";
      document.getElementById("chatFooter").style.display = "none";
      document.getElementById("chatFooterEmpty").style.display = "block";
    }

    startListClients()
    function startListClients(){
      fetch('https://localhost:3000/wpp/last-message-client')
        .then(res => res.json())
        .then(data => {
            for(clients of data){

            const client = {
                clientNumber: clients["from_wa_id"],
                clientName: clients["name"],
                timeMsg: clients["created_at"],
                clientMsg: clients["body"],
            }

            renderInMessageVisualizer(client);
        }
        })
        .catch(e => console.log(e));
    }

    function renderInMessageVisualizer(obj){
        if(obj.timeMsg.indexOf('Z') != -1){
            const date = new Date(obj.timeMsg.replace('Z',''));

            const hour = String(date.getHours()).padStart(2,'0');
            const minute = String(date.getMinutes()).padStart(2,'0');

            obj.timeMsg = hour + ':' + minute;
        }

        $('#contact_area').prepend(
            `<div class="msg")">
                <li class="list-group-item px-md-4 py-3 py-md-4 n${obj.clientNumber}">
                    <a onclick="changeStatus(${obj.clientNumber})" class="d-flex">
                        <img class="avatar lg rounded-circle img-thumbnail" style="border: 1px solid silver; text-align: center;" src="https://ui-avatars.com/api/?name=${obj.clientName}&background=random&color=ff0000&bold=true">
                        <div class="flex-fill ms-3 text-truncate">
                            <h6 class="d-flex justify-content-between mb-0"><span><b>${obj.clientName}</b></span> <small class="msg-time"><b>${obj.timeMsg}</b></small></h6>
                            <span class="text-muted"> <i class="icofont-swoosh-right   fs-5"></i></span>
                            ${obj.clientMsg}
                        </div>
                    </a>
                </li>
            </div>`
        )
    }

    startListClientsEmAtendimento()
    function startListClientsEmAtendimento(){
      fetch('https://localhost:3000/wpp/last-message-client-all')
      .then(res => res.json())
      .then(data => {
          for(clients of data){

          const client = {
              clientNumber: clients["from_wa_id"],
              clientName: clients["name"],
              timeMsg: clients["created_at"],
              clientMsg: clients["body"],
          }

          renderInMessageVisualizerEmAtendimento(client);
      }
      })
      .catch(e => console.log(e));
    }

    function renderInMessageVisualizerEmAtendimento(obj){
      if(obj.timeMsg.indexOf('Z') != -1){
          const date = new Date(obj.timeMsg.replace('Z',''));

          const hour = String(date.getHours()).padStart(2,'0');
          const minute = String(date.getMinutes()).padStart(2,'0');

          obj.timeMsg = hour + ':' + minute;
      }

      $('#contact_area_atendimento').prepend(
          `<div class="msg")">
              <li class="list-group-item px-md-4 py-3 py-md-4 n${obj.clientNumber}">
                  <a onclick="changeStatus(${obj.clientNumber})" class="d-flex">
                      <img class="avatar lg rounded-circle img-thumbnail" style="border: 1px solid silver; text-align: center;" src="https://ui-avatars.com/api/?name=${obj.clientName}&background=random&color=ff0000&bold=true">
                      <div class="flex-fill ms-3 text-truncate">
                          <h6 class="d-flex justify-content-between mb-0"><span>${obj.clientName}</span> <small class="msg-time">${obj.timeMsg}</small></h6>
                          <span class="text-muted"> <i class="icofont-swoosh-right   fs-5"></i></span>
                          ${obj.clientMsg}
                      </div>
                  </a>
              </li>
          </div>`
      )
    }

    function renderMessagesInChat(arr,clientNumber){
      //take name
      fetch('https://localhost:3000/wpp/client-data',{
        method: 'POST',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({clientNumber: clientNumber}),
      }).then((res) => res.json())
        .then((data) => {

        const name = data[0].name

        //render info in chat
        document.getElementById("chat-client-name").innerText = name;
        document.getElementById("chat-client-photo").src = `https://ui-avatars.com/api/?name=${name}&background=random&color=ff0000&bold=true`;

        const chatBody = document.getElementById('chatBody');
        chatBody.innerHTML = '' // delete message in

        for(item of arr){
          var timeMsg = item.created_at;

          if(timeMsg.indexOf('Z') != -1){
              const date = new Date(timeMsg.replace('Z',''));

              const hour = String(date.getHours()).padStart(2,'0');
              const minute = String(date.getMinutes()).padStart(2,'0');

              timeMsg = hour + ':' + minute;
          }

          if(arr["to_wa"] == undefined){
            chatBody.insertAdjacentHTML("beforeend",`
            <li class="mb-3 d-flex flex-row align-items-end">
                            <div class="max-width-70">
                                <div class="user-info mb-1">
                                    <span class="text-muted small">
                                    ${timeMsg},<br>${name}:</span>
                                </div>
                                <div class="card border-0 p-3">
                                    <div class="message"> ${item["body"]}</div>
                                </div>
                            </div>
                        </li>`)
          }

        }
      }).catch((res) => console.log(res));


    }
    function updateStatusAtendimento(clientNumber){
      fetch('https://localhost:3000/wpp/updatestatus', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({from_wa_id: clientNumber}),
      })
      $('#modalCloseMessage').modal('toggle')

      disableComponents()
      location.reload()
    }

    function modalMoverAtendimento(clientNumber){
        let messageOpen = document.getElementById("chatBody").style.display
        if (messageOpen === 'block'){
            $('#modalCloseMessage').modal('show')
            const clientName = document.getElementById("chat-client-name").innerText
            $('#spanInBodyModalCloseMessage').text("Mover o atendimento de "+clientName+" ("+clientNumber+") para a fila de " )
            document.getElementById("buttonMover").setAttribute('onclick', `updateStatusAtendimento(${clientNumber})`)
        }
    }

    function enableComponents(){
      document.getElementById("headerClient").style.display = "block";
      document.getElementById("headerClientEmpty").style.display = "none";
      document.getElementById("chatBody").style.display = "block";
      document.getElementById("chatBodyEmpty").style.display = "none";
      document.getElementById("chatFooter").style.display = "block";
      document.getElementById("chatFooterEmpty").style.display = "none";
    }

    function changeStatus(clientNumber){
            //render msg of DB
      if (typeof clientNumber !== 'undefined') {
          enableComponents()

          document.getElementById("buttonMoverAtendimento").style.display = "block";
          document.getElementById("buttonMoverAtendimento").setAttribute('onclick', `modalMoverAtendimento(${clientNumber})`)

          //RENDER MESSAGES IN CHAT
          fetch('https://localhost:3000/wpp/message-chat-client', {
            method: 'POST',
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({wa_id: clientNumber}),
          }).then(res => res.json())
            .then(data => {
              //render msg chat
              renderMessagesInChat(data, clientNumber);
            })
            .catch(err => {
            console.log(err)
          })
      }else{
        disableComponents()
      }
    }

        </script>
        <script>
          function msgErroLogin(){
            Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Email ou senha incorreto!'
            })
          }
           function cadastromsg(){
           Swal.fire({
              title:'Sucesso!',
              text:'Cadastro realizado com sucesso!',
              icon:'success'
           })
          }

         /* if({{message}}){
            msgErroLogin();

          }     */
        </script>
        <!-- Jquery Core Js -->
        <script src="/bundles/libscripts.bundle.js"></script>
        <!-- Plugin Js-->
        <!-- <script src="/bundles/apexcharts.bundle.js"></script>
        <!-- Jquery Page Js -->
        <!-- tawk chat -->
        <script src="/js/template.js"></script>
        <script src="/js/page/hr.js"></script>

  </body>
</html>
